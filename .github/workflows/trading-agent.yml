name: Trading Agent Daily Run

on:
  schedule:
    # Run at 4PM UTC (Monday-Friday)
    # Adjust timezone as needed - this is 4PM UTC
    - cron: '0 16 * * 1-5'
  
  # Allow manual trigger for testing
  workflow_dispatch:

jobs:
  run-trading-agent:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Setup Chrome and ChromeDriver
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
    
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@v2
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run trading agent
      env:
        # Telegram credentials from GitHub Secrets
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        # Add other API keys as needed
        # API_KEY: ${{ secrets.API_KEY }}
        TZ: 'UTC'  # Set timezone if needed
        # Chrome/Selenium configuration for NON-HEADLESS mode
        DISPLAY: ':99'
        CHROME_BIN: /usr/bin/google-chrome
        CHROMEDRIVER_PATH: /usr/local/bin/chromedriver
      run: |
        # Install xvfb and window manager for full GUI support
        sudo apt-get update
        sudo apt-get install -y xvfb fluxbox x11vnc
        
        # Start virtual display with larger resolution
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 2
        
        # Start window manager
        fluxbox -display :99 > /dev/null 2>&1 &
        sleep 2
        
        # Verify display is working
        echo "Virtual display started on $DISPLAY"
        
        # Run the trading agent (Chrome will run in non-headless mode)
        python trade_agent.py
    
    - name: Upload results (optional)
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if the script fails
      with:
        name: trading-results-${{ github.run_number }}
        path: |
          *.csv
          *.log
          logs/
        retention-days: 30
